{"ast":null,"code":"/* AXIOS */\nimport axios from \"axios\";\n/* ACTION TYPES */\n\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from \"../constants/cartConstants\";\n/* ACTION CREATOR USED IN CartScreen COMPONENT */\n\n/* FOR ADDING PRODUCTS TO CART */\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  // FETCHING PRODUCT DATA\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  }); // SETTING VALUE OF CART ITEMS IN LOCAL STORAGE\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n/* FOR REMOVING PRODUCTS FROM CART */\n\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  }); // SETTING VALUE OF CART ITEMS IN LOCAL STORAGE\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n/* ACTION CREATOR USED IN ShippingScreen COMPONENT */\n\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  }); // SETTING VALUE OF ADDRESS IN LOCAL STORAGE\n\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n/* ACTION CREATOR USED IN PaymentScreen COMPONENT */\n\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  }); // SETTING VALUE OF PAYMENT METHOD IN LOCAL STORAGE\n\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};","map":{"version":3,"sources":["/home/electronica/projectITI/E-COMMERCE/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,0BAHF,EAIEC,wBAJF,QAKO,4BALP;AAOA;;AAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAvB;AAEAE,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEX,aADC;AAEPY,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADP;AAEPC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFJ;AAGPC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHL;AAIPC,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAJL;AAKPC,MAAAA,YAAY,EAAET,IAAI,CAACS,YALZ;AAMPZ,MAAAA;AANO;AAFF,GAAD,CAAR,CAJkE,CAgBlE;;AACAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAlBM;AAoBP;;AACA,OAAO,MAAMC,cAAc,GAAIpB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEV,gBADC;AAEPW,IAAAA,OAAO,EAAEP;AAFF,GAAD,CAAR,CAD4D,CAM5D;;AACAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CARM;AAUP;;AACA,OAAO,MAAME,mBAAmB,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AACzDA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAET,0BADC;AAEPU,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR,CADyD,CAMzD;;AACAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAxC;AACD,CARM;AAUP;;AACA,OAAO,MAAMkB,iBAAiB,GAAIlB,IAAD,IAAWF,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAER,wBADC;AAEPS,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR,CADuD,CAMvD;;AACAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAtC;AACD,CARM","sourcesContent":["/* AXIOS */\nimport axios from \"axios\";\n\n/* ACTION TYPES */\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\n/* ACTION CREATOR USED IN CartScreen COMPONENT */\n\n/* FOR ADDING PRODUCTS TO CART */\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  // FETCHING PRODUCT DATA\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  // SETTING VALUE OF CART ITEMS IN LOCAL STORAGE\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n/* FOR REMOVING PRODUCTS FROM CART */\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  // SETTING VALUE OF CART ITEMS IN LOCAL STORAGE\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n/* ACTION CREATOR USED IN ShippingScreen COMPONENT */\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  // SETTING VALUE OF ADDRESS IN LOCAL STORAGE\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\n/* ACTION CREATOR USED IN PaymentScreen COMPONENT */\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  // SETTING VALUE OF PAYMENT METHOD IN LOCAL STORAGE\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n"]},"metadata":{},"sourceType":"module"}