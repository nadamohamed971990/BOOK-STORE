{"ast":null,"code":"var _jsxFileName = \"/home/electronica/ecommerce/frontend/src/screens/RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n/* REACT ROUTER */\n\nimport { Link } from \"react-router-dom\";\n/* REACT BOOTSTRAP */\n\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n/* COMPONENTS */\n\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n/* REACT - REDUX */\n\nimport { useDispatch, useSelector } from \"react-redux\";\n/* ACTION CREATORS */\n\nimport { register } from \"../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen({\n  location,\n  history\n}) {\n  _s();\n\n  /* STATE */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  /* SETTING UP REDIRECT */\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    userInfo,\n    loading,\n    error\n  } = userRegister;\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n  /* HANDLERS */\n\n  const submitHandler = e => {\n    e.preventDefault();\n    /* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR REGISTER */\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"name\",\n          placeholder: \"Enter Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"email\",\n          placeholder: \"Enter Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          value: password,\n          onChange: e => setpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"passwordConfirm\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"mt-3\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"Have an Account ?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/login?redirect=${redirect}` : \"/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterScreen, \"5mOFkv1svNRqDNSMnyVwTbewdcg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["/home/electronica/ecommerce/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Button","Form","Message","Loader","FormContainer","useDispatch","useSelector","register","RegisterScreen","location","history","name","setName","email","setEmail","password","setpassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","redirect","search","split","userRegister","state","userInfo","loading","error","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { register } from \"../actions/userActions\";\n\nfunction RegisterScreen({ location, history }) {\n  /* STATE */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  /* SETTING UP REDIRECT */\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const userRegister = useSelector((state) => state.userRegister);\n\n  const { userInfo, loading, error } = userRegister;\n\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  /* HANDLERS */\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    /* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR REGISTER */\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Register</h1>\n\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setpassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"passwordConfirm\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        {/* <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              />\n\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose File\"\n                custom\n                onChange={uploadFileHandler}\n              />\n\n              {uploading && <Loader />}\n            </Form.Group> */}\n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account ?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Sign In\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n}\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}