{"ast":null,"code":"var _jsxFileName = \"/home/electronica/ecommerce/frontend/src/screens/RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n/* REACT ROUTER */\n\nimport { Link } from \"react-router-dom\";\n/* REACT BOOTSTRAP */\n\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n/* COMPONENTS */\n\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n/* REACT - REDUX */\n\nimport { useDispatch, useSelector } from \"react-redux\";\n/* ACTION CREATORS */\n\nimport { register } from \"../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen({\n  location,\n  history\n}) {\n  _s();\n\n  /* STATE */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // const [image, setImage] = useState(\"\");\n\n  const [uploading, setUploading] = useState(false);\n  const [data, setData] = useState({\n    image: \"\"\n  });\n  const [errors, setErrors] = useState({\n    image: \"\"\n  });\n\n  const handleImageChange = e => {\n    let newData = { ...data\n    };\n    newData[\"image\"] = e.target.files[0];\n    setData(newData);\n  };\n\n  const dispatch = useDispatch();\n  /* SETTING UP REDIRECT */\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    userInfo,\n    loading,\n    error\n  } = userRegister;\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n  /* HANDLERS */\n\n  const submitHandler = e => {\n    e.preventDefault();\n    /* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR REGISTER */\n      dispatch(register(name, email, password));\n    }\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    if (data.image_url) formData.append(\"image\", file); // formData.append(\"_id\",_id );\n    // setUploading(true);\n    // try {\n    //   const config = {\n    //     header: {\n    //       \"Content-Type\": \"multipart/form-data\",\n    //     },\n    //   };\n    //   const { data } = await axios.post(\n    //     \"/api/users/upload/\",\n    //     formData,\n    //     config\n    //   );\n    //   setImage(data);\n    //   setUploading(false);\n    // } catch (error) {\n    //   setUploading(false);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"name\",\n          placeholder: \"Enter Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"email\",\n          placeholder: \"Enter Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          value: password,\n          onChange: e => setpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"passwordConfirm\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          name: \"image\",\n          accept: \"image/jpeg,image/png,image/gif\",\n          placeholder: \"Enter Image\" // value={image}\n          // onChange={(e) => setImage(e.target.value)}\n          ,\n          onChange: e => {\n            handleImageChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), errors.image && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"alert-danger\",\n          tooltip: true,\n          children: errors.image_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"mt-3\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"Have an Account ?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/login?redirect=${redirect}` : \"/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterScreen, \"MouSVfsXCCNQQy9P8uaRxMU6id0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["/home/electronica/ecommerce/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","axios","Link","Row","Col","Button","Form","Message","Loader","FormContainer","useDispatch","useSelector","register","RegisterScreen","location","history","name","setName","email","setEmail","password","setpassword","confirmPassword","setConfirmPassword","message","setMessage","uploading","setUploading","data","setData","image","errors","setErrors","handleImageChange","e","newData","target","files","dispatch","redirect","search","split","userRegister","state","userInfo","loading","error","push","submitHandler","preventDefault","uploadFileHandler","file","formData","FormData","image_url","append","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { register } from \"../actions/userActions\";\n\nfunction RegisterScreen({ location, history }) {\n  /* STATE */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  // const [image, setImage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const [data, setData] = useState({\n   \n    image: \"\",\n});\n\n  const [errors, setErrors] = useState({\n    image:\"\"\n  });\n  const handleImageChange = (e) => {\n    let newData = { ...data };\n    newData[\"image\"] = e.target.files[0];\n    setData(newData);\n};\n\n  const dispatch = useDispatch()\n\n  /* SETTING UP REDIRECT */\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const userRegister = useSelector((state) => state.userRegister);\n\n  const { userInfo, loading, error } = userRegister;\n\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  /* HANDLERS */\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    /* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR REGISTER */\n      dispatch(register(name, email, password));\n    }\n  };\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    if (data.image_url)\n\n    formData.append(\"image\", file);\n    // formData.append(\"_id\",_id );\n\n    \n\n    // setUploading(true);\n\n    // try {\n    //   const config = {\n    //     header: {\n    //       \"Content-Type\": \"multipart/form-data\",\n    //     },\n    //   };\n\n    //   const { data } = await axios.post(\n    //     \"/api/users/upload/\",\n    //     formData,\n    //     config\n    //   );\n\n    //   setImage(data);\n    //   setUploading(false);\n    // } catch (error) {\n    //   setUploading(false);\n    // }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Register</h1>\n\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setpassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"passwordConfirm\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/jpeg,image/png,image/gif\"\n                placeholder=\"Enter Image\"\n                // value={image}\n                // onChange={(e) => setImage(e.target.value)}\n                onChange={(e) => {\n                  handleImageChange(e);\n              }}/>\n\n          {errors.image && (\n                        <Form.Text className=\"alert-danger\" tooltip>\n                            {errors.image_url}\n                        </Form.Text>\n                    )}\n\n              {/* <Form.File\n                id=\"image-file\"\n                label=\"Choose File\"\n                custom\n                onChange={uploadFileHandler}\n              />\n\n              {uploading && <Loader />} */}\n            </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account ?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Sign In\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n}\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}