{"ast":null,"code":"var _jsxFileName = \"/home/electronica/Music/ecommerce-django-react-main/frontend/src/screens/LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n/* REACT ROUTER */\n\nimport { Link } from \"react-router-dom\";\n/* REACT BOOTSTRAP */\n\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n/* COMPONENTS */\n\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n/* REACT - REDUX */\n\nimport { useDispatch, useSelector } from \"react-redux\";\n/* ACTION CREATORS */\n\nimport { login } from \"../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginScreen({\n  location,\n  history\n}) {\n  _s();\n\n  /* STATE */\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const dispatch = useDispatch();\n  /* SETTING UP REDIRECT */\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo,\n    loading,\n    error\n  } = userLogin;\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n  /* HANDLERS */\n\n  const submitHandler = e => {\n    e.preventDefault();\n    /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR LOGIN */\n\n    dispatch(login(email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          value: password,\n          onChange: e => setpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"mt-3\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"New Customer ?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/register?redirect=${redirect}` : \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginScreen, \"W/Dg0QD4HTM7SKSKfmWMi9I/+Io=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/home/electronica/Music/ecommerce-django-react-main/frontend/src/screens/LoginScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Button","Form","Message","Loader","FormContainer","useDispatch","useSelector","login","LoginScreen","location","history","email","setEmail","password","setpassword","dispatch","redirect","search","split","userLogin","state","userInfo","loading","error","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { login } from \"../actions/userActions\";\n\nfunction LoginScreen({ location, history }) {\n  /* STATE */\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  /* SETTING UP REDIRECT */\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { userInfo, loading, error } = userLogin;\n\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  /* HANDLERS */\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR LOGIN */\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setpassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer ?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n}\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}