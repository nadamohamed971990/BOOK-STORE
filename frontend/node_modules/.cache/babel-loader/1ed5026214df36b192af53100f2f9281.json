{"ast":null,"code":"/* ACTION TYPES */\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\n/* REDUCER USED IN CartScreen & ShippingScreen COMPONENT */\n\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    // IF ITEM DOESN'T EXIST IN CART WE ADD IT, IF IT ALREADY EXISTS THEN WE UPDATE IT'S QUANTITY\n\n    /* CartScreen COMPONENT */\n    case CART_ADD_ITEM:\n      {\n        const item = action.payload;\n        const existItem = state.cartItems.find(x => x.product === item.product);\n\n        if (existItem) {\n          return { ...state,\n            cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n          };\n        } else {\n          return { ...state,\n            cartItems: [...state.cartItems, item]\n          };\n        }\n      }\n\n    case CART_REMOVE_ITEM:\n      {\n        return { ...state,\n          cartItems: state.cartItems.filter(x => x.product !== action.payload)\n        };\n      }\n\n    /* ShippingScreen COMPONENT */\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    /* PaymentScreen COMPONENT */\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    /* PlaceOrderScreen COMPONENT */\n\n    case CART_CLEAR_ITEMS:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/electronica/ecommerce-django-react-main/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod"],"mappings":"AAAA;AACA,SACEA,aADF,EAEEC,gBAFF,EAGEC,0BAHF,EAIEC,wBAJF,EAKEC,gBALF,QAMO,4BANP;AAQA;;AACA,OAAO,MAAMC,WAAW,GAAG,CACzBC,KAAK,GAAG;AACNC,EAAAA,SAAS,EAAE,EADL;AAENC,EAAAA,eAAe,EAAE;AAFX,CADiB,EAKzBC,MALyB,KAMtB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE;;AAEA;AAEA,SAAKV,aAAL;AAAoB;AAClB,cAAMW,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,cAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,YAAIH,SAAJ,EAAe;AACb,iBAAO,EACL,GAAGP,KADE;AAELC,YAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFN,WAAP;AAMD,SAPD,MAOO;AACL,iBAAO,EACL,GAAGT,KADE;AAELC,YAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAFN,WAAP;AAID;AACF;;AAED,SAAKV,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGK,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAnD;AAFN,SAAP;AAID;;AAED;;AAEA,SAAKV,0BAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELE,QAAAA,eAAe,EAAEC,MAAM,CAACG;AAFnB,OAAP;;AAKF;;AAEA,SAAKT,wBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELa,QAAAA,aAAa,EAAEV,MAAM,CAACG;AAFjB,OAAP;;AAKF;;AACA,SAAKR,gBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELC,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAKF;AACE,aAAOD,KAAP;AAvDJ;AAyDD,CAhEM","sourcesContent":["/* ACTION TYPES */\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from \"../constants/cartConstants\";\n\n/* REDUCER USED IN CartScreen & ShippingScreen COMPONENT */\nexport const cartReducer = (\n  state = {\n    cartItems: [],\n    shippingAddress: {},\n  },\n  action\n) => {\n  switch (action.type) {\n    // IF ITEM DOESN'T EXIST IN CART WE ADD IT, IF IT ALREADY EXISTS THEN WE UPDATE IT'S QUANTITY\n\n    /* CartScreen COMPONENT */\n\n    case CART_ADD_ITEM: {\n      const item = action.payload;\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    }\n\n    case CART_REMOVE_ITEM: {\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n    }\n\n    /* ShippingScreen COMPONENT */\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n\n    /* PaymentScreen COMPONENT */\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n\n    /* PlaceOrderScreen COMPONENT */\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}