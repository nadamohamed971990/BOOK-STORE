{"ast":null,"code":"/* REDUX */\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n/* IMPORTING REDUCERS */\n\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from \"./reducers/orderReducers\";\n/* COMBINED REDUCER */\n\nconst reducer = combineReducers({\n  cart: cartReducer,\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfle: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\n/* PULLING DATA OUT OF LOCAL STORAGE AND LOAD IT INTO INITIAL STATE */\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\n/* INITIAL STATE */\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\n/* REDUX STORE */\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/electronica/Music/ecommerce-django-react-main/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","cart","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","userLogin","userRegister","userDetails","userUpdateProfle","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AAEA;;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,0BANF,EAOEC,sBAPF,QAQO,4BARP;AAUA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,yBARP;AAUA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,mBANF,QAOO,0BAPP;AASA;;AACA,MAAMC,OAAO,GAAGzB,eAAe,CAAC;AAC9B0B,EAAAA,IAAI,EAAEf,WADwB;AAG9BgB,EAAAA,WAAW,EAAEvB,kBAHiB;AAI9BwB,EAAAA,cAAc,EAAEvB,qBAJc;AAK9BwB,EAAAA,aAAa,EAAEvB,oBALe;AAM9BwB,EAAAA,aAAa,EAAEvB,oBANe;AAO9BwB,EAAAA,aAAa,EAAEvB,oBAPe;AAQ9BwB,EAAAA,mBAAmB,EAAEvB,0BARS;AAS9BwB,EAAAA,eAAe,EAAEvB,sBATa;AAW9BwB,EAAAA,SAAS,EAAEtB,gBAXmB;AAY9BuB,EAAAA,YAAY,EAAEtB,mBAZgB;AAa9BuB,EAAAA,WAAW,EAAEtB,kBAbiB;AAc9BuB,EAAAA,gBAAgB,EAAEtB,wBAdY;AAe9BuB,EAAAA,QAAQ,EAAEtB,eAfoB;AAgB9BuB,EAAAA,UAAU,EAAEtB,iBAhBkB;AAiB9BuB,EAAAA,UAAU,EAAEtB,iBAjBkB;AAmB9BuB,EAAAA,WAAW,EAAEtB,kBAnBiB;AAoB9BuB,EAAAA,YAAY,EAAEtB,mBApBgB;AAqB9BuB,EAAAA,QAAQ,EAAEtB,eArBoB;AAsB9BuB,EAAAA,WAAW,EAAEtB,kBAtBiB;AAuB9BuB,EAAAA,SAAS,EAAEtB,gBAvBmB;AAwB9BuB,EAAAA,YAAY,EAAEtB;AAxBgB,CAAD,CAA/B;AA2BA;;AACA,MAAMuB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA;;AACA,MAAMK,YAAY,GAAG;AACnB5B,EAAAA,IAAI,EAAE;AACJ6B,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBnB,EAAAA,SAAS,EAAE;AACTuB,IAAAA,QAAQ,EAAEL;AADD;AALQ,CAArB;AAUA,MAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA;;AACA,MAAMyD,KAAK,GAAG5D,WAAW,CACvB0B,OADuB,EAEvB6B,YAFuB,EAGvBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["/* REDUX */\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n/* IMPORTING REDUCERS */\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from \"./reducers/productReducers\";\n\nimport { cartReducer } from \"./reducers/cartReducers\";\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\n\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from \"./reducers/orderReducers\";\n\n/* COMBINED REDUCER */\nconst reducer = combineReducers({\n  cart: cartReducer,\n\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfle: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n});\n\n/* PULLING DATA OUT OF LOCAL STORAGE AND LOAD IT INTO INITIAL STATE */\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\n/* INITIAL STATE */\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage,\n  },\n};\n\nconst middleware = [thunk];\n\n/* REDUX STORE */\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}